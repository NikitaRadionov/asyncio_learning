Из разных мест на просторе интернета мне удалось ознакомиться с тем, что можно писать асинхронный код на Python.
Удалось изучить что такое цикл событий, корутина, конкурентное программирование, многопоточное программирование, многопроцессорное программирование (параллельное программирование).

Удалось понять доклад Бизли о конкурентном программировании, в котором была реализована концепция конкурентного программирования
с помощью генераторов Python. В его докладе корутины (сопрограммы) представляют из себя "бесконечные" генераторы, код которых выполнялся при доступности сокета, связанного с этим генератором.
Цикл событий (event loop) был реализован по принципу Round Robin, согласно которому задачи (сокет и связанный с ним генератор (корутина)) помещались в очередь и исполнялись одна за другой.
Когда сопрограмма отработала, то она удалялась из головы очереди и происходило ожидание доступности сокета для последующего выполнения.

Существует такая замечательная библиотека asyncio (скорее её можно назвать фреймворком), с помощью которой можно реализовывать конкурентность на Python при этом не используя много кода.
Чтение официальной документации не привело меня к освоению данной темы на желаемом уровню, но спасибо за то, что на свете существует такая книга как
Asyncio и конкурентное программирование на Python, которая помогает мне освоить эту тему на нужном уровне.

Этот репозиторий посвящен тому, что здесь я отрбатываю листинги, которые приведены в этой книге.
